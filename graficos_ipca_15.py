# -*- coding: utf-8 -*-
"""graficos_IPCA_15

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19kQ3zZgjPh0K8PdrXNQhnlb9oSqbme00
"""

!pip install mplcyberpunk
!pip install python-bcb
from bcb import currency
from bcb import sgs
from bcb import Expectativas
import mplcyberpunk
import matplotlib.pyplot as plt
import matplotlib.ticker as mtick
import matplotlib.dates as mdates
from matplotlib.dates import date2num
from datetime import datetime
from datetime import timedelta
import pandas as pd
import seaborn as sns

!pip install sidrapy
import sidrapy

import numpy as np
import pandas as pd

import datetime as dt

import seaborn as sns
from matplotlib import pyplot as plt

ipca_raw = sidrapy.get_table(table_code = '3065',
                             territorial_level = '1',
                             ibge_territorial_code = 'all',
                             variable = '355,356,1118,1119,1120',
                             period = 'last%20472')

ipca_raw

ipca_raw['D3N'] == 'IPCA15 - Peso mensal'

ipca =  (
    ipca_raw
    .loc[1:,['V', 'D2C', 'D3N']]
    .rename(columns = {'V': 'value',
                       'D2C': 'date',
                       'D3N': 'variable'}
            )
    .assign(variable = lambda x: x['variable'].replace({'IPCA - Variação mensal' : 'Var. mensal (%)',
                                                        'IPCA - Variação acumulada no ano': 'Var. acumulada no ano (%)',
                                                        'IPCA - Variação acumulada em 3 meses' : 'Var. MM3M (%)',
                                                        'IPCA - Variação acumulada em 6 meses': 'Var. MM6M (%)',
                                                        'IPCA - Variação acumulada em 12 meses' : 'Var. MM12M (%)'}),
            date  = lambda x: pd.to_datetime(x['date'],
                                              format = "%Y%m"),
            value = lambda x: x['value'].astype(float)
           )
    .pipe(lambda x: x.loc[x.date > '2007-01-01']
          )
        )

ipca

# Cores
colors = ['#282f6b', '#b22200', '#eace3f', '#224f20', '#b35c1e', '#419391', '#839c56','#3b89bc']

## Tamanho
theme = {'figure.figsize' : (15, 10)}

## Aplica o tema
sns.set_theme(rc = theme,
              palette = colors)

ipca_12m = (
            ipca
            .pipe(lambda x: x.loc[x.variable == 'IPCA15 - Variação acumulada em 12 meses'])
           )

plt.style.use('cyberpunk')

ipca_12m = (
            ipca
            .pipe(lambda x: x.loc[x.variable == 'IPCA15 - Variação acumulada em 12 meses'])
           )

# Plota o IPCA acumulado em 12 meses
sns.lineplot(x = 'date',
             y = 'value',
             data = ipca_12m).set(title = 'IPCA acumulado em 12 meses',
                                                           xlabel = '',
                                                           ylabel = '% a.a.')

plt.title('IPCA-15 acumulado em 12 meses', fontsize=20, fontweight='bold')
plt.grid(False)

g = sns.FacetGrid(ipca, col = 'variable',
                  col_wrap = 2,
                  hue = 'variable',
                  sharey = False,
                  height = 4,
                  aspect = 2)


g.map_dataframe(sns.lineplot,
                x = 'date',
                y = 'value').set(xlabel = "",
                                 ylabel = '%')

# Adiciona a fonte no gráfico
plt.annotate('Fonte: analisemacro.com.br com dados do Sidra/IBGE',
            xy = (1.0, -0.13),
            xycoords='axes fraction',
            ha='right',
            va="center",
            fontsize=10)

ipca_gp_raw = sidrapy.get_table(table_code = '7062',
territorial_level = '1',
ibge_territorial_code = 'all',
variable = '355,357',
period = 'all',
classification = '315/7170,7445,7486,7558,7625,7660,7712,7766,7786'
)

ipca_gp_raw

ipca_gp_raw['D3C'] == '356'

ipca_gp =  (
    ipca_gp_raw
    .loc[1:,['V', 'D2C', 'D3N', 'D4N']]
    .rename(columns = {'V': 'value',
                       'D2C': 'date',
                       'D3N': 'variable',
                       'D4N': 'groups'})
    .assign(variable = lambda x: x['variable'].replace({'IPCA15 - Variação mensal' : 'variacao',
                                                        'IPCA15 - Peso mensal': 'peso'}),
            date  = lambda x: pd.to_datetime(x['date'],
                                              format = "%Y%m"),
            value = lambda x: x['value'].astype(float),
            groups = lambda x: x['groups'].astype(str)
           )
    .pipe(lambda x: x.loc[x.date > '2007-01-01'])
        )

ipca_gp_wider = (
    ipca_gp
    .pivot_table(index = ['date', 'groups'],
                 columns = 'variable',
                 values = 'value')
    .reset_index()
    .assign(contribuicao = lambda x: (x.peso * x.variacao) / 100)
                )

!pip install plotly
import plotly.express as px



fig = px.bar(ipca_gp_wider,
       x = 'date',
       y = 'contribuicao',
       color = 'groups',
       color_discrete_sequence = colors)

fig.update_layout(
    title={
        'text': "<b>Participação dos Grupos no IPCA-15</b>",
        'y': 0.95,
        'x': 0.5,
        'xanchor': 'center',
        'yanchor': 'top'
    }
)